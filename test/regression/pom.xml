<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.jacorb</groupId>
        <artifactId>jacorb-parent</artifactId>
        <version>3.5-SNAPSHOT</version>
        <relativePath>../..</relativePath>
    </parent>

    <artifactId>jacorb-regression</artifactId>
    <packaging>jar</packaging>

    <name>JacORB Regression Tests</name>
    <description>JacORB Regression Tests</description>
    <url>http://www.jacorb.org</url>

    <properties>
        <spring.version>3.1.1.RELEASE</spring.version>
        <cxf.version>2.7.5</cxf.version>
        <byteman.version>2.1.4.1</byteman.version>
        <jacoco.version>0.6.4.201312101107</jacoco.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.jacorb</groupId>
            <artifactId>jacorb</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jacorb</groupId>
            <artifactId>jacorb</artifactId>
            <version>${project.version}</version>
            <classifier>sources</classifier>
        </dependency>
        <dependency>
            <groupId>org.jacorb</groupId>
            <artifactId>jacorb-omgapi</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jacorb</groupId>
            <artifactId>jacorb-idl-compiler</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jacorb</groupId>
            <artifactId>jacorb-services</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>easymock</groupId>
            <artifactId>easymock</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-jdk14</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.4</version>
        </dependency>

        <!-- CXF/Spring is for Bug968 (CXF+Corba) -->
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-frontend-jaxws</artifactId>
            <version>${cxf.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-bindings-corba</artifactId>
            <version>${cxf.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.byteman</groupId>
            <artifactId>byteman</artifactId>
            <version>${byteman.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.byteman</groupId>
            <artifactId>byteman-submit</artifactId>
            <version>${byteman.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.byteman</groupId>
            <artifactId>byteman-install</artifactId>
            <version>${byteman.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.byteman</groupId>
            <artifactId>byteman-bmunit</artifactId>
            <version>${byteman.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.sun</groupId>
            <artifactId>tools</artifactId>
            <version>1.6.0</version>
            <scope>system</scope>
            <systemPath>${toolsjar}</systemPath>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- Disable installation and deployment as this module is just for assembling the distribution zips -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>

            <!-- Constrain the fork count to 1 on single processor machines -->
            <plugin>
                <groupId>org.codehaus.gmaven</groupId>
                <artifactId>gmaven-plugin</artifactId>
                <version>1.5</version>
                <executions>
                    <execution>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <source>
                                def processorCount = Runtime.getRuntime().availableProcessors();
                                log.info ("Processor count is $processorCount");
                                if ( processorCount == 1 )
                                {
                                   project.properties['surefire.forkCount'] = "1";
                                }
                                else
                                {
                                   project.properties['surefire.forkCount'] = "0.5C";
                                }
                            </source>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>add-test-source</id>
                        <phase>process-test-sources</phase>
                        <goals>
                            <goal>add-test-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${project.build.directory}/generated-test-sources/cxf</source>
                                <source>${project.build.directory}/generated-test-sources/idl</source>
                                <source>${basedir}/../listenendpoints/echo_corbaloc/src</source>
                            </sources>
                        </configuration>
                    </execution>


                    <execution>
                        <id>add-report-sources</id>
                        <phase>pre-site</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${project.build.directory}/covered-sources</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-corbatools-maven-plugin</artifactId>
                <version>${cxf.version}</version>
                <executions>
                    <execution>
                        <id>cfgService</id>
                        <phase>generate-test-sources</phase>
                        <goals>
                            <goal>idl2wsdl</goal>
                        </goals>
                        <configuration>
                            <outputDir>${project.build.directory}/test-classes</outputDir>
                            <idltowsdlOptions>
                                <idltowsdlOption>
                                    <idl>${basedir}/src/test/idl/repro.idl</idl>
                                    <extraargs>
                                        <extraarg>-I</extraarg>
                                        <extraarg>${basedir}/src/test/idl</extraarg>
                                        <extraarg>-verbose</extraarg>
                                    </extraargs>
                                </idltowsdlOption>
                            </idltowsdlOptions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-codegen-plugin</artifactId>
                <version>${cxf.version}</version>
                <executions>
                    <execution>
                        <id>generate-cxf-sources</id>
                        <phase>generate-test-sources</phase>
                        <configuration>
                            <defaultOptions>
                                <frontEnd>jaxws21</frontEnd>
                                <packagenames>
                                    <package>cxf.repro</package>
                                </packagenames>
                                <extraargs>
                                    <extraarg>-client</extraarg>
                                    <extraarg>-verbose</extraarg>
                                </extraargs>
                            </defaultOptions>
                            <wsdlRoot>${project.build.directory}/test-classes</wsdlRoot>
                            <sourceRoot>${project.build.directory}/generated-test-sources/cxf</sourceRoot>
                        </configuration>
                        <goals>
                            <goal>wsdl2java</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>idlj-maven-plugin</artifactId>
                <version>1.2.1</version>
                <executions>

                    <execution>
                        <id>standard-compile</id>
                        <goals>
                            <goal>generate-test</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>
                                    <includes>
                                        <include>*.idl</include>
                                    </includes>
                                    <excludes>
                                        <exclude>CallbackServer.idl</exclude>
                                        <exclude>TimingServer.idl</exclude>
                                        <exclude>antBugJac608.idl</exclude>
                                        <exclude>SyncScopeServer.idl</exclude>
                                        <exclude>_bugjac560.idl</exclude>
                                        <exclude>_bugjac801.idl</exclude>
                                        <exclude>ami_bug*.idl</exclude>
                                    </excludes>
                                    <additionalArguments>
                                        <additionalArgument>-generate_helper</additionalArgument>
                                        <additionalArgument>jacorb</additionalArgument>
                                    </additionalArguments>
                                </source>
                            </sources>
                        </configuration>
                    </execution>

                    <execution>
                        <id>ami-compile</id>
                        <goals>
                            <goal>generate-test</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>
                                    <includes>
                                        <include>CallbackServer.idl</include>
                                        <include>TimingServer.idl</include>
                                        <include>SyncScopeServer.idl</include>
                                        <include>ami_bug*.idl</include>
                                    </includes>
                                    <additionalArguments>
                                        <additionalArgument>-ami_callback</additionalArgument>
                                    </additionalArguments>
                                </source>
                            </sources>
                        </configuration>
                    </execution>

                    <execution>
                        <id>bugjac560</id>
                        <goals>
                            <goal>generate-test</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>
                                    <includes>
                                        <include>_bugjac560.idl</include>
                                    </includes>
                                    <additionalArguments>
                                        <additionalArgument>-i2jpackage</additionalArgument>
                                        <additionalArgument>Node:cerent.cms.idl.Node</additionalArgument>
                                        <additionalArgument>-ami_callback</additionalArgument>
                                    </additionalArguments>
                                </source>
                            </sources>
                        </configuration>
                    </execution>

                    <execution>
                        <id>bugjac801</id>
                        <goals>
                            <goal>generate-test</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>
                                    <includes>
                                        <include>_bugjac801.idl</include>
                                    </includes>
                                    <additionalArguments>
                                        <additionalArgument>-genEnhanced</additionalArgument>
                                        <additionalArgument>-generate_helper</additionalArgument>
                                        <additionalArgument>jacorb</additionalArgument>
                                    </additionalArguments>
                                </source>
                            </sources>
                        </configuration>
                    </execution>

                    <execution>
                        <id>bugjac608</id>
                        <goals>
                            <goal>generate-test</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>
                                    <includes>
                                        <include>antBugJac608.idl</include>
                                    </includes>
                                    <additionalArguments>
                                        <additionalArgument>-i2jpackage</additionalArgument>
                                        <additionalArgument>antBugJac608:org.jacorb.test.antBugJac608</additionalArgument>
                                        <additionalArgument>-sloppy_identifiers</additionalArgument>
                                        <additionalArgument>-generate_helper</additionalArgument>
                                        <additionalArgument>jacorb</additionalArgument>
                                    </additionalArguments>
                                </source>
                            </sources>
                        </configuration>
                    </execution>

                    <execution>
                        <id>echocorbaloc</id>
                        <goals>
                            <goal>generate-test</goal>
                        </goals>
                        <configuration>
                            <sourceDirectory>${basedir}/../listenendpoints/echo_corbaloc/idl</sourceDirectory>
                            <sources>
                                <source>
                                    <includes>
                                        <include>server.idl</include>
                                    </includes>
                                    <additionalArguments>
                                        <additionalArgument>-i2jpackage</additionalArgument>
                                        <additionalArgument>:org.jacorb</additionalArgument>
                                        <additionalArgument>-generate_helper</additionalArgument>
                                        <additionalArgument>jacorb</additionalArgument>
                                    </additionalArguments>
                                </source>
                            </sources>
                        </configuration>
                    </execution>

                </executions>
                <configuration>
                    <compiler>jacorb</compiler>
                    <includeDirs>
                        <includeDir>${basedir}/../../idl/omg</includeDir>
                        <includeDir>${basedir}/idl</includeDir>
                    </includeDirs>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.jacorb</groupId>
                        <artifactId>jacorb-idl-compiler</artifactId>
                        <version>${project.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>rmic-maven-plugin</artifactId>
                <version>1.2.1</version>
                <executions>
                    <execution>
                        <id>rmi compilation</id>
                        <goals>
                            <goal>test-rmic</goal>
                        </goals>
                        <phase>process-test-classes</phase>
                        <configuration>
                            <keep>true</keep>
                            <iiop>true</iiop>
                            <poa>true</poa>
                            <testOutputDirectory>${project.build.testOutputDirectory}</testOutputDirectory>
                            <sources>
                                <source>
                                    <includes>
                                        <include>org.jacorb.test.orb.rmi.RMITestImpl.class</include>
                                        <include>org.jacorb.test.bugs.bugjac149.RemoteIPingImpl.class</include>
                                    </includes>
                                </source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <testSource>1.6</testSource>
                    <testTarget>1.6</testTarget>
                    <debug>true</debug>
                    <showWarnings>true</showWarnings>
                    <showDeprecation>true</showDeprecation>
                    <compilerArgs>
                        <arg>-Xbootclasspath/p:${settings.localRepository}/org/jacorb/jacorb-omgapi/${project.version}/jacorb-omgapi-${project.version}.jar</arg>
                    </compilerArgs>
                </configuration>
                <executions>
                    <execution>
                        <id>default-testCompile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                        <configuration>
                            <testExcludes>
                                <testExclude>**/RMITestServant.java</testExclude>
                            </testExcludes>
                        </configuration>
                    </execution>
                    <execution>
                        <id>rmi-compile</id>
                        <phase>process-test-classes</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                        <configuration>
                            <testIncludes>
                                <testInclude>**/RMITestServant.java</testInclude>
                            </testIncludes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.16</version>
                <configuration>
                    <systemPropertyVariables>
                        <!-- Default timeout for a server to start -->
                        <jacorb.test.timeout.server>60000</jacorb.test.timeout.server>
                    </systemPropertyVariables>
                </configuration>
                <executions>
                    <execution>
                        <id>default-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <useManifestOnlyJar>false</useManifestOnlyJar>
                            <forkCount>${surefire.forkCount}</forkCount>
                            <reuseForks>false</reuseForks>
                            <argLine>${jacoco.agent.argLine} -Xbootclasspath/p:${settings.localRepository}/org/jacorb/jacorb-omgapi/${project.version}/jacorb-omgapi-${project.version}.jar -Djacorb.test.verbose=${jacorb.test.verbose}</argLine>
                            <environmentVariables>
                                <BYTEMAN_HOME></BYTEMAN_HOME>
                            </environmentVariables>
                        </configuration>
                    </execution>
                    <execution>
                        <id>ssl</id>
                        <phase>test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <useManifestOnlyJar>false</useManifestOnlyJar>
                            <forkCount>${surefire.forkCount}</forkCount>
                            <reuseForks>false</reuseForks>
                            <argLine>${jacoco.agent.argLine} -Xbootclasspath/p:${settings.localRepository}/org/jacorb/jacorb-omgapi/${project.version}/jacorb-omgapi-${project.version}.jar -Djacorb.test.verbose=${jacorb.test.verbose} -Djacorb.test.ssl=true</argLine>
                            <reportsDirectory>${project.build.directory}/surefire-reports-ssl</reportsDirectory>
                            <environmentVariables>
                                <BYTEMAN_HOME></BYTEMAN_HOME>
                            </environmentVariables>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>prepare-covered-classes</id>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <phase>pre-site</phase>
                        <configuration>
                            <excludeClassifiers>sources</excludeClassifiers>
                            <outputDirectory>${project.build.outputDirectory}</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>prepare-covered-sources</id>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <phase>pre-site</phase>
                        <configuration>
                            <includeClassifiers>sources</includeClassifiers>
                            <outputDirectory>${project.build.directory}/covered-sources</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <includeGroupIds>org.jacorb</includeGroupIds>
                </configuration>
            </plugin>
            <!--
                 This generates a nice aggregate report. It must be run locally from the regression directory.
                 Unfortunately it seems invoking from $JACORB_HOME the maven-surefire-report-plugin does not work.
                 Therefore to create an aggegrate test report invoke the tests and site plugin from the regression
                 directory e.g.
                 mvn -Dtest="BasicTest" clean test site
                 Or if they have been invoked already (as part of a full build), then this could be invoked as:
                 mvn site
                 Finally, it can be viewed by invoking
                 firefox target/site/index.html
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>3.3</version>
                <executions>
                    <!-- Run in both default-site phase and after all the tests -->
                    <execution>
                        <id>default-site</id>
                        <phase>site</phase>
                        <goals>
                            <goal>site</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <reportPlugins>
                        <plugin>
                            <!-- Generates some interesting reports and the root index.html -->
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-project-info-reports-plugin</artifactId>
                            <version>2.7</version>
                            <reportSets>
                                <reportSet>
                                    <reports>
                                        <report>index</report>
                                        <report>dependencies</report>
                                        <report>dependency-management</report>
                                        <report>plugins</report>
                                        <report>plugin-management</report>
                                    </reports>
                                </reportSet>
                            </reportSets>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-surefire-report-plugin</artifactId>
                            <version>2.16</version>
                            <configuration>
                                <linkXRef>false</linkXRef>
                                <aggregate>true</aggregate>
                                <reportsDirectories>
                                    <reportDirectory>${project.build.directory}/surefire-reports</reportDirectory>
                                    <reportDirectory>${project.build.directory}/surefire-reports-ssl</reportDirectory>
                                </reportsDirectories>
                            </configuration>
                            <reportSets>
                                <reportSet>
                                    <reports>
                                        <report>report-only</report>
                                    </reports>
                                </reportSet>
                            </reportSets>
                        </plugin>

                        <plugin>
                            <groupId>org.jacoco</groupId>
                            <artifactId>jacoco-maven-plugin</artifactId>
                            <version>${jacoco.version}</version>
                            <configuration>
                                <dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
                                <includes>
                                    <include>org/jacorb/**/*</include>
                                </includes>
                            </configuration>
                            <reportSets>
                                <reportSet>
                                    <reports>
                                        <report>report</report>
                                    </reports>
                                </reportSet>
                            </reportSets>
                        </plugin>

                    </reportPlugins>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
                <executions>
                    <!--
                        Prepares the property pointing to the JaCoCo runtime agent which
                        is passed as VM argument when Maven the Surefire plugin is executed.
                    -->
                    <execution>
                        <id>pre-unit-test</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <!-- Sets the path to the file which contains the execution data. -->
                            <destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
                            <append>true</append>
                            <dumpOnExit>true</dumpOnExit>
                            <output>file</output>
                            <!--
                                Sets the name of the property containing the settings
                                for JaCoCo runtime agent.
                            -->
                            <propertyName>jacoco.agent.argLine</propertyName>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

</project>
